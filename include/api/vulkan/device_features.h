#ifndef REND_API_VULKAN_DEVICE_FEATURES_H
#define REND_API_VULKAN_DEVICE_FEATURES_H

#include "core/bit_field.h"

#include <cstdint>
#include <vector>
#include <vulkan.h>

namespace rend
{
    enum class DeviceFeature : uint32_t
    {
        ROBUST_BUFFER_ACCESS,
        FULL_DRAW_INDEX_UINT32,
        IMAGE_CUBE_ARRAY,
        INDEPENDENT_BLEND,
        GEOMETRY_SHADER,
        TESSELLATION_SHADER,
        SAMPLE_RATE_SHADING,
        DUAL_SRC_BLEND,
        LOGIC_OP,
        MULTI_DRAW_INDIRECT,
        DRAW_INDIRECT_FIRST_INSTANCE,
        DEPTH_CLAMP,
        DEPTH_BIAS_CLAMP,
        FILL_MODE_NON_SOLID,
        DEPTH_BOUNDS,
        WIDE_LINES,
        LARGE_POINTS,
        ALPHA_TO_ONE,
        MULTI_VIEWPORT,
        SAMPLER_ANISOTROPY,
        TEXTURE_COMPRESSION_ETC2,
        TEXTURE_COMPRESSION_ASTC_LDR,
        TEXTURE_COMPRESSION_BC,
        OCCLUSION_QUERY_PRECISE,
        PIPELINE_STATISTICS_QUERY,
        VERTEX_PIPELINE_STORES_AND_ATOMICS,
        FRAGMENT_STORES_AND_ATOMICS,
        SHADER_TESSELLATION_AND_GEOMETRY_POINT_SIZE,
        SHADER_IMAGE_GATHER_EXTENDED,
        SHADER_STORAGE_IMAGE_EXTENDED_FORMATS,
        SHADER_STORAGE_IMAGE_MULTISAMPLE,
        SHADER_STORAGE_IMAGE_READ_WITHOUT_FORMAT,
        SHADER_STORAGE_IMAGE_WRITE_WITHOUT_FORMAT,
        SHADER_UNIFORM_BUFFER_ARRAY_DYNAMIC_INDEXING,
        SHADER_SAMPLED_IMAGE_ARRAY_DYNAMIC_INDEXING,
        SHADER_STORAGE_BUFFER_ARRAY_DYNAMIC_INDEXING,
        SHADER_STORAGE_IMAGE_ARRAY_DYNAMIC_INDEXING,
        SHADER_CLIP_DISTANCE,
        SHADER_CULL_DISTANCE,
        SHADER_FLOAT64,
        SHADER_INT64,
        SHADER_INT16,
        SHADER_RESOURCE_RESIDENCY,
        SHADER_RESOURCE_MIN_LOD,
        SPARSE_BINDING,
        SPARSE_RESIDENCY_BUFFER,
        SPARSE_RESIDENCY_IMAGE2_D,
        SPARSE_RESIDENCY_IMAGE3_D,
        SPARSE_RESIDENCY2_SAMPLES,
        SPARSE_RESIDENCY4_SAMPLES,
        SPARSE_RESIDENCY8_SAMPLES,
        SPARSE_RESIDENCY16_SAMPLES,
        SPARSE_RESIDENCY_ALIASED,
        VARIABLE_MULTISAMPLE_RATE,
        INHERITED_QUERIES,

        // Since Vulkan 1.1
        STORAGE_BUFFER_16_BIT_ACCESS,
        UNIFORM_AND_STORAGE_BUFFER_16_BIT_ACCESS,
        STORAGE_PUSH_CONSTANT_16,
        STORAGE_INPUT_OUTPUT_16,
        MULTIVIEW,
        MULTIVIEW_GEOMETRY_SHADER,
        MULTIVIEW_TESSELLATION_SHADER,
        VARIABLE_POINTERS_STORAGE_BUFFER,
        VARIABLE_POINTERS,
        PROTECTED_MEMORY,
        SAMPLER_YCBCR_CONVERSION,
        SHADER_DRAW_PARAMETERS,

        // Since Vulkan 1.2
       SAMPLER_MIRROR_CLAMP_TO_EDGE,
       DRAW_INDIRECT_COUNT,
       STORAGE_BUFFER8_BIT_ACCESS,
       UNIFORM_AND_STORAGE_BUFFER8_BIT_ACCESS,
       STORAGE_PUSH_CONSTANT8,
       SHADER_BUFFER_INT64_ATOMICS,
       SHADER_SHARED_INT64_ATOMICS,
       SHADER_FLOAT16,
       SHADER_INT8,
       DESCRIPTOR_INDEXING,
       SHADER_INPUT_ATTACHMENT_ARRAY_DYNAMIC_INDEXING,
       SHADER_UNIFORM_TEXEL_BUFFER_ARRAY_DYNAMIC_INDEXING,
       SHADER_STORAGE_TEXEL_BUFFER_ARRAY_DYNAMIC_INDEXING,
       SHADER_UNIFORM_BUFFER_ARRAY_NON_UNIFORM_INDEXING,
       SHADER_SAMPLED_IMAGE_ARRAY_NON_UNIFORM_INDEXING,
       SHADER_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING,
       SHADER_STORAGE_IMAGE_ARRAY_NON_UNIFORM_INDEXING,
       SHADER_INPUT_ATTACHMENT_ARRAY_NON_UNIFORM_INDEXING,
       SHADER_UNIFORM_TEXEL_BUFFER_ARRAY_NON_UNIFORM_INDEXING,
       SHADER_STORAGE_TEXEL_BUFFER_ARRAY_NON_UNIFORM_INDEXING,
       DESCRIPTOR_BINDING_UNIFORM_BUFFER_UPDATE_AFTER_BIND,
       DESCRIPTOR_BINDING_SAMPLED_IMAGE_UPDATE_AFTER_BIND,
       DESCRIPTOR_BINDING_STORAGE_IMAGE_UPDATE_AFTER_BIND,
       DESCRIPTOR_BINDING_STORAGE_BUFFER_UPDATE_AFTER_BIND,
       DESCRIPTOR_BINDING_UNIFORM_TEXEL_BUFFER_UPDATE_AFTER_BIND,
       DESCRIPTOR_BINDING_STORAGE_TEXEL_BUFFER_UPDATE_AFTER_BIND,
       DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING,
       DESCRIPTOR_BINDING_PARTIALLY_BOUND,
       DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT,
       RUNTIME_DESCRIPTOR_ARRAY,
       SAMPLER_FILTER_MINMAX,
       SCALAR_BLOCK_LAYOUT,
       IMAGELESS_FRAMEBUFFER,
       UNIFORM_BUFFER_STANDARD_LAYOUT,
       SHADER_SUBGROUP_EXTENDED_TYPES,
       SEPARATE_DEPTH_STENCIL_LAYOUTS,
       HOST_QUERY_RESET,
       TIMELINE_SEMAPHORE,
       BUFFER_DEVICE_ADDRESS,
       BUFFER_DEVICE_ADDRESS_CAPTURE_REPLAY,
       BUFFER_DEVICE_ADDRESS_MULTI_DEVICE,
       VULKAN_MEMORY_MODEL,
       VULKAN_MEMORY_MODEL_DEVICE_SCOPE,
       VULKAN_MEMORY_MODEL_AVAILABILITY_VISIBILITY_CHAINS,
       SHADER_OUTPUT_VIEWPORT_INDEX,
       SHADER_OUTPUT_LAYER,
       SUBGROUP_BROADCAST_DYNAMIC_ID
    };

    struct PhysicalDeviceFeatures
    {
        VkPhysicalDeviceFeatures vk_1_0_features;
        VkPhysicalDeviceVulkan11Features vk_1_1_features;
        VkPhysicalDeviceVulkan12Features vk_1_2_features;

        static PhysicalDeviceFeatures make_device_features(const std::vector<DeviceFeature>& features);
    };
}

#endif
